using System.Collections.Generic;
using System.Xml.Serialization;
using System.Collections;
using UnityEngine;
using System.Linq;
using System;

public enum ConstraintType{ FuzzyProperties, UserDefinedTags }
public enum ConstraintTarget{ AllRooms, StartRoom, EndRoom, MiddleRooms, SideRooms}

[Serializable]
public class Constraint {
	[XmlIgnore]
	protected static List<GameObject> chunks;
	protected ConstraintTarget target;
	protected ConstraintType type;
	protected List<string> parsedTags;
	protected int autoTagIndex;
	protected string rawTags;
	public float Min;
	public float Max;

	public void ExecuteConstraint(){
		//chunks.RemoveAll (c => !IsConstraintSatisfied (c));
	}

	public Constraint(){
		parsedTags = new List<string> ();
		rawTags = "";
	}

	[XmlIgnore]
	public static List<GameObject> Chunks {
		get {
			return chunks;
		}
		set {
			chunks = value;
		}
	}

	public ConstraintType Type {
		get {
			return this.type;
		}
		set {
			type = value;
		}
	}

	public ConstraintTarget Target {
		get {
			return this.target;
		}
		set {
			target = value;
		}
	}

	public int AutoTagIndex {
		get {
			return this.autoTagIndex;
		}
		set {
			autoTagIndex = value;
		}
	}

	public string RawTags {
		get {
			return this.rawTags;
		}
		set {			
			rawTags = value;
			parsedTags = rawTags.Split (';').ToList();
		}
	}

	public List<string> ParsedTags {
		get {
			return this.parsedTags;
		}
	}
}
/*
[Serializable]
public abstract class ConstraintImplementation{
	protected abstract bool IsConstraintSatisfied (GameObject chunk);
}
	
[Serializable]
public class AutoTagConstraint : ConstraintImplementation{
	string tagName;


	protected override bool IsConstraintSatisfied(GameObject chunk){
		ChunkTags tags = chunk.GetComponent<ChunkTags> ();
		if (tags != null) {
			List<TagInstance> tagInstances = tags.autoGenerated;
			TagInstance toTest = tagInstances.Find (ti => ti.Name == tagName);
			return toTest.Value < max && toTest.Value > min;
		}
		return true;
	}

	public float Min {
		get {
			return this.min;
		}
		set {
			min = value;
		}
	}

	public float Max {
		get {
			return this.max;
		}
		set {
			max = value;
		}
	}

	public string TagName {
		get {
			return this.tagName;
		}
		set {
			tagName = value;
		}
	}
}*/